<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="03617541-6738-4d29-9081-31bc95b439e1" activeEnvironment="Default" name="REST Project 1" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="${projectDir}" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="e1b03fc3-9986-4867-a176-27a6f6abb0de" port="8080" path="/" host="LP-PC0KFGCL" name="WebRioSSO-Success"><con:settings/><con:properties/><con:restMockAction name="/webrio-webapp/rest/msd/admin" method="POST" resourcePath="/webrio-webapp/rest/msd/admin" id="5413aec4-afae-4a15-963e-02e2b68d5c41"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response1" id="5e92b60d-1198-48a7-943f-5c3d0a46aa85" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
   "webRioUrl": "http://google.com",
   "responseCode": "200",
   "responseMessage": "Different Error"
}</con:responseContent><con:header><con:name>Set-Cookie</con:name><con:value>jsessionid=999999qwerty</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>